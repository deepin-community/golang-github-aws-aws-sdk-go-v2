// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AppRequiredCapability string

// Enum values for AppRequiredCapability
const (
	AppRequiredCapabilityFileUpload    AppRequiredCapability = "FileUpload"
	AppRequiredCapabilityCreatorMode   AppRequiredCapability = "CreatorMode"
	AppRequiredCapabilityRetrievalMode AppRequiredCapability = "RetrievalMode"
	AppRequiredCapabilityPluginMode    AppRequiredCapability = "PluginMode"
)

// Values returns all known values for AppRequiredCapability. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppRequiredCapability) Values() []AppRequiredCapability {
	return []AppRequiredCapability{
		"FileUpload",
		"CreatorMode",
		"RetrievalMode",
		"PluginMode",
	}
}

type AppStatus string

// Enum values for AppStatus
const (
	AppStatusPublished AppStatus = "PUBLISHED"
	AppStatusDraft     AppStatus = "DRAFT"
	AppStatusDeleted   AppStatus = "DELETED"
)

// Values returns all known values for AppStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppStatus) Values() []AppStatus {
	return []AppStatus{
		"PUBLISHED",
		"DRAFT",
		"DELETED",
	}
}

type CardOutputSource string

// Enum values for CardOutputSource
const (
	CardOutputSourceApprovedSources CardOutputSource = "approved-sources"
	CardOutputSourceLlm             CardOutputSource = "llm"
)

// Values returns all known values for CardOutputSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CardOutputSource) Values() []CardOutputSource {
	return []CardOutputSource{
		"approved-sources",
		"llm",
	}
}

type CardType string

// Enum values for CardType
const (
	CardTypeTextInput  CardType = "text-input"
	CardTypeQQuery     CardType = "q-query"
	CardTypeFileUpload CardType = "file-upload"
	CardTypeQPlugin    CardType = "q-plugin"
)

// Values returns all known values for CardType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CardType) Values() []CardType {
	return []CardType{
		"text-input",
		"q-query",
		"file-upload",
		"q-plugin",
	}
}

type DocumentScope string

// Enum values for DocumentScope
const (
	DocumentScopeApplication DocumentScope = "APPLICATION"
	DocumentScopeSession     DocumentScope = "SESSION"
)

// Values returns all known values for DocumentScope. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentScope) Values() []DocumentScope {
	return []DocumentScope{
		"APPLICATION",
		"SESSION",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusInProgress ExecutionStatus = "IN_PROGRESS"
	ExecutionStatusWaiting    ExecutionStatus = "WAITING"
	ExecutionStatusCompleted  ExecutionStatus = "COMPLETED"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"IN_PROGRESS",
		"WAITING",
		"COMPLETED",
	}
}

type LibraryItemStatus string

// Enum values for LibraryItemStatus
const (
	LibraryItemStatusPublished LibraryItemStatus = "PUBLISHED"
	LibraryItemStatusDisabled  LibraryItemStatus = "DISABLED"
)

// Values returns all known values for LibraryItemStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (LibraryItemStatus) Values() []LibraryItemStatus {
	return []LibraryItemStatus{
		"PUBLISHED",
		"DISABLED",
	}
}

type PluginType string

// Enum values for PluginType
const (
	PluginTypeServiceNow PluginType = "SERVICE_NOW"
	PluginTypeSalesforce PluginType = "SALESFORCE"
	PluginTypeJira       PluginType = "JIRA"
	PluginTypeZendesk    PluginType = "ZENDESK"
	PluginTypeCustom     PluginType = "CUSTOM"
)

// Values returns all known values for PluginType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PluginType) Values() []PluginType {
	return []PluginType{
		"SERVICE_NOW",
		"SALESFORCE",
		"JIRA",
		"ZENDESK",
		"CUSTOM",
	}
}

type Sender string

// Enum values for Sender
const (
	SenderUser   Sender = "USER"
	SenderSystem Sender = "SYSTEM"
)

// Values returns all known values for Sender. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Sender) Values() []Sender {
	return []Sender{
		"USER",
		"SYSTEM",
	}
}
